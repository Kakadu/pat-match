(env
 (dev
  (flags
   (:standard -w -3-9-32-33-39 -warn-error -27))))

(data_only_dirs mini unn guards gadt aez-demo nonlinear alt-ergo-demo)

(library
 (name helper)
 (modules helper)
 (preprocess
  (pps
   OCanren-ppx.ppx_repr
   OCanren-ppx.ppx_distrib
   OCanren-ppx.ppx_fresh
   GT.ppx_all))
 (flags
  (:standard -rectypes))
 (libraries OCanren unix))

(library
 (name mytester)
 (modules mytester)
 (public_name mytester)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx_all ppx_expect))
 (flags (-rectypes))
 (libraries mtime.clock.os OCanren.tester OCanren GT)
 (inline_tests))

(executable
 (name mytester_run)
 (modules mytester_run)
 (flags
  (:standard -rectypes))
 (libraries mytester)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx_all ppx_expect)))

(cram
 (deps ./mytester_run.exe))

(library
 (name mybench)
 (modules mybench)
 (preprocess
  (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx_all))
 ;(flags      ())
 (libraries GT mtime.clock.os))

; (executable
;  (name main)
;  (modules main)
;  (flags (-rectypes))
;  (libraries OCanren)
;  (preprocess
;   (pps OCanren-ppx.ppx_repr OCanren-ppx.ppx_fresh GT.ppx_all)))

; (rule
;  (targets work.ml)
;  (deps work.ml2mk.ml)
;  (action
;   (run noCanren work.ml2mk.ml -o %{targets})))

; (executable
;  (name main2)
;  (modules main2 work)
;  (flags (-rectypes))
;  (libraries OCanren OCanren.tester helper)
;  (preprocess
;   (pps
;    OCanren-ppx.ppx_repr
;    OCanren-ppx.ppx_fresh
;    GT.ppx
;    GT.syntax.map
;    GT.syntax.fmt
;    GT.syntax.compare)))
